package solution.egen.rest.contollers;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response.Status;

import solution.egen.dao.EmployeeDAO;
import solution.egen.exception.AppException;
import solution.egen.model.Employee;

@Path("/employee")
public class EmployeeController {

	@GET
	//@Produces(MediaType.APPLICATION_JSON)
	public List<Employee> findAll () {
		try {
			EmployeeDAO dao = new EmployeeDAO();
			return dao.fetchAll();
		} catch (AppException e) {
			throw new WebApplicationException(Status.INTERNAL_SERVER_ERROR);
		}
	}
	
	@GET
	@Path("/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public Employee findOne(@PathParam("id") int empId) {
		try {
			EmployeeDAO dao = new EmployeeDAO();
			Employee emp =  dao.fetchOne(empId);
			if(emp == null) {
				throw new WebApplicationException(Status.NOT_FOUND);
			}
			else {
				return emp;
			}
		} catch (AppException e) {
			throw new WebApplicationException(Status.INTERNAL_SERVER_ERROR);
		}
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public Employee create(Employee emp) {
		try {
			EmployeeDAO dao = new EmployeeDAO();
			return dao.create(emp);
		} catch (AppException e) {
			throw new WebApplicationException(Status.INTERNAL_SERVER_ERROR);
		}
	}
	
	
	@PUT
	@Path("/{id}")
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public Employee update(@PathParam("id") int empId, Employee emp) {
		
		
		return emp;
	}
	
	@DELETE
	@Path("/{id}")
	public void delete (@PathParam("id") int empId) {
		
	}
	
}
